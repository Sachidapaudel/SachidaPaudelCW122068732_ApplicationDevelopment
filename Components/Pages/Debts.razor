@page "/debts"
@using SachidaPaudel.Models
@using SachidaPaudel.Service.DebtsService
@inject IDebtsService DebtsService

<div class="container">
    <h3>Debts</h3>

    <!-- Display All Debts -->
    <div class="debts-list">
        <h4>All Debts</h4>
        <table class="table">
            <thead>
                <tr>
                    <th>Source</th>
                    <th>Amount</th>
                    <th>Due Date</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                @if (debts != null && debts.Any())
                {
                    foreach (var debt in debts)
                    {
                        <tr>
                            <td>@debt.DebtSource</td>
                            <td>@debt.DebtAmount</td>
                            <td>@debt.DebtDueDate.ToString("MM/dd/yyyy")</td>
                            <td>@(debt.IsCleared ? "Cleared" : "Pending")</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4">No debts available.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Add New Debt -->
    <div class="mt-3">
        <EditForm Model="newDebt" OnValidSubmit="AddDebtAsync">
            <div class="row">
                <div class="col">
                    <InputText @bind-Value="newDebt.DebtSource" class="form-control" placeholder="Source" required />
                </div>
                <div class="col">
                    <InputNumber @bind-Value="newDebt.DebtAmount" class="form-control" placeholder="Amount" required />
                </div>
                <div class="col">
                    <InputDate @bind-Value="newDebt.DebtDueDate" class="form-control" required />
                </div>
                <div class="col-auto">
                    <button type="submit" class="btn btn-success">
                        <i class="bi bi-plus-lg"></i>
                    </button>
                </div>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private List<SachidaPaudel.Models.Debts> debts = new List<SachidaPaudel.Models.Debts>();
    private SachidaPaudel.Models.Debts newDebt = new SachidaPaudel.Models.Debts() { DebtDueDate = DateTime.Now };

    protected override async Task OnInitializedAsync()
    {
        debts = await DebtsService.GetDebtsAsync(); // Fetch all debts
    }

    private async Task AddDebtAsync()
    {
        await DebtsService.AddDebtAsync(newDebt); // Add the new debt

        // Refresh the debt list
        debts = await DebtsService.GetDebtsAsync();

        // Reset form fields after adding the debt
        newDebt = new SachidaPaudel.Models.Debts() { DebtDueDate = DateTime.Now };
    }
}