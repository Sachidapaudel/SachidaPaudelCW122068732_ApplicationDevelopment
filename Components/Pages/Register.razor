@page "/register"
@inject NavigationManager Navigation
@inject SachidaPaudel.Service.UserService.IUserService UserService
@inject SachidaPaudel.Utils.CsvHelper CsvHelper

@using SachidaPaudel.Utils

<div class="container">
    <h3>Register</h3>
    <div class="form-group">
        <label for="username">Username</label>
        <input type="text" class="form-control" id="username" @bind="username" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <input type="password" class="form-control" id="password" @bind="password" />
    </div>
    <div class="form-group">
        <label for="currency">Preferred Currency</label>
        <input type="text" class="form-control" id="currency" @bind="currency" />
    </div>
    <button class="btn btn-primary" @onclick="RegisterAccount">Register</button>
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger mt-3">@errorMessage</div>
    }
    <div class="mt-3">
        <span>Already have an account? <a href="/login">Login</a></span>
    </div>
</div>

@code {
    private string username = string.Empty;
    private string password = string.Empty;
    private string currency = string.Empty;
    private string errorMessage = string.Empty;

    private void RegisterAccount()
    {
        try
        {
            // Load all users using CsvHelper instance
            var users = CsvHelper.LoadUsers();

            // Check if the username already exists
            if (users.Any(u => u.Username == username))
            {
                errorMessage = "Username already exists. Please choose a different username.";
                return;
            }

            // Create a new user
            var newUser = new SachidaPaudel.Models.User
                {
                    Username = username,
                    Password = password,
                    Currency = currency
                };

            // Save the new user using CsvHelper
            CsvHelper.SaveUser(newUser);

            // Register the user using UserService
            UserService.RegisterUser(newUser);

            // Redirect to the login page after successful registration
            Navigation.NavigateTo("/login");
        }
        catch (Exception ex)
        {
            // Handle any errors that occur during registration
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }
}
