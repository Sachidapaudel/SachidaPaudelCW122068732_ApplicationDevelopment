@page "/login"
@inject NavigationManager Navigation
@inject SachidaPaudel.Service.UserService.IUserService UserService
@inject SachidaPaudel.Utils.CsvHelper CsvHelper

@using SachidaPaudel.Utils

<div class="container">
    <h3>Welcome</h3>
    <div class="form-group">
        <label for="username">Username</label>
        <input type="text" class="form-control" id="username" @bind="username" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <input type="password" class="form-control" id="password" @bind="password" />
    </div>
    <div class="form-group">
        <label for="currency">Preferred Currency</label>
        <input type="text" class="form-control" id="currency" @bind="currency" />
    </div>
    <button class="btn btn-primary" @onclick="SetupAccount">Login</button>
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger mt-3">@errorMessage</div>
    }
    <div class="mt-3">
        <span>Don't have an account? <a href="/register">Register</a></span>
    </div>
</div>

@code {
    private string username = string.Empty;
    private string password = string.Empty;
    private string currency = string.Empty;
    private string errorMessage = string.Empty;

    private void SetupAccount()
    {
        try
        {
            // Load all users using CsvHelper instance
            var users = CsvHelper.LoadUsers();

            // Find the user with the matching username and password
            var user = users.FirstOrDefault(u => u.Username == username && u.Password == password);

            if (user != null)
            {
                UserService.UpdateLoginStatus(true); // Set IsLoggedIn to true
                                                     // If setup is successful, navigate to the home page
                Navigation.NavigateTo("/");
            }
            else
            {
                // Display an error message
                errorMessage = "Invalid username or password.";
            }
        }
        catch (Exception ex)
        {
            // Handle any errors that occur during loading
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }
}
